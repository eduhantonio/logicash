# Generated by Django 5.2.1 on 2025-10-10 14:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conquista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('icone', models.CharField(help_text="Nome do ícone (ex: 'trophy', 'star')", max_length=100)),
                ('icone_url', models.URLField(blank=True, help_text='URL do ícone personalizado', null=True)),
                ('criterio_pontos', models.IntegerField(blank=True, help_text='Pontos mínimos necessários', null=True)),
                ('criterio_quizzes', models.IntegerField(blank=True, help_text='Número mínimo de quizzes completados', null=True)),
                ('criterio_acertos', models.FloatField(blank=True, help_text='Percentual mínimo de acertos', null=True)),
                ('nivel_dificuldade', models.IntegerField(blank=True, help_text='Nível de dificuldade específico', null=True)),
                ('ativa', models.BooleanField(default=True)),
                ('cor', models.CharField(default='#008445', help_text='Cor em hex (#008445)', max_length=7)),
            ],
            options={
                'verbose_name': 'Conquista',
                'verbose_name_plural': 'Conquistas',
                'ordering': ['criterio_pontos', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('nivel_dificuldade', models.IntegerField(help_text='Nível de dificuldade de 1 a 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('tema', models.CharField(help_text='Ex: Poupança, Investimentos, Cartão de Crédito', max_length=100)),
                ('tempo_limite', models.IntegerField(blank=True, help_text='Tempo limite em minutos', null=True)),
                ('pontos_base', models.IntegerField(default=10, help_text='Pontos base para completar o quiz')),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
                'ordering': ['nivel_dificuldade', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='Estudante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo do estudante', max_length=100)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('escola', models.CharField(blank=True, max_length=200, null=True)),
                ('serie', models.CharField(blank=True, max_length=50, null=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='estudante', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estudante',
                'verbose_name_plural': 'Estudantes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Pontuacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontos_totais', models.IntegerField(default=0)),
                ('nivel_atual', models.IntegerField(default=1)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('estudante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pontuacao', to='game.estudante')),
            ],
            options={
                'verbose_name': 'Pontuação',
                'verbose_name_plural': 'Pontuações',
                'ordering': ['-pontos_totais'],
            },
        ),
        migrations.CreateModel(
            name='Pergunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField()),
                ('explicacao', models.TextField(blank=True, help_text='Explicação da resposta correta', null=True)),
                ('ordem', models.IntegerField(default=1)),
                ('pontos', models.IntegerField(default=1)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perguntas', to='game.quiz')),
            ],
            options={
                'verbose_name': 'Pergunta',
                'verbose_name_plural': 'Perguntas',
                'ordering': ['quiz', 'ordem'],
                'unique_together': {('quiz', 'ordem')},
            },
        ),
        migrations.CreateModel(
            name='Resposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=500)),
                ('correta', models.BooleanField(default=False)),
                ('ordem', models.IntegerField(default=1)),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas', to='game.pergunta')),
            ],
            options={
                'verbose_name': 'Resposta',
                'verbose_name_plural': 'Respostas',
                'ordering': ['pergunta', 'ordem'],
            },
        ),
        migrations.CreateModel(
            name='EstudanteConquista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_desbloqueio', models.DateTimeField(auto_now_add=True)),
                ('conquista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudantes', to='game.conquista')),
                ('estudante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conquistas', to='game.estudante')),
            ],
            options={
                'verbose_name': 'Conquista do Estudante',
                'verbose_name_plural': 'Conquistas dos Estudantes',
                'ordering': ['-data_desbloqueio'],
                'unique_together': {('estudante', 'conquista')},
            },
        ),
        migrations.CreateModel(
            name='Resultado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontuacao_obtida', models.IntegerField(default=0)),
                ('total_perguntas', models.IntegerField()),
                ('acertos', models.IntegerField(default=0)),
                ('data_realizacao', models.DateTimeField(auto_now_add=True)),
                ('tempo_gasto', models.IntegerField(blank=True, help_text='Tempo gasto em segundos', null=True)),
                ('concluido', models.BooleanField(default=False)),
                ('estudante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultados', to='game.estudante')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultados', to='game.quiz')),
            ],
            options={
                'verbose_name': 'Resultado',
                'verbose_name_plural': 'Resultados',
                'ordering': ['-data_realizacao'],
                'unique_together': {('estudante', 'quiz', 'data_realizacao')},
            },
        ),
    ]
